// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Order-item tests:  Snapshot matches 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OrderItem
    book={true}
    name="Book title"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="order-box row"
      >
        <div
          className="col-md-8 title"
        >
          <div>
            Book title: 
          </div>
          <div>
            Author: 
          </div>
        </div>
        <div>
          <button
            className="btn btn-danger"
            onClick={[Function]}
            type="button"
          >
            Delete
          </button>
        </div>
      </div>,
      "className": "order-item",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="col-md-8 title"
          >
            <div>
              Book title: 
            </div>
            <div>
              Author: 
            </div>
          </div>,
          <div>
            <button
              className="btn btn-danger"
              onClick={[Function]}
              type="button"
            >
              Delete
            </button>
          </div>,
        ],
        "className": "order-box row",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div>
                Book title: 
              </div>,
              <div>
                Author: 
              </div>,
            ],
            "className": "col-md-8 title",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Book title: ",
                  undefined,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Book title: ",
                undefined,
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Author: ",
                  undefined,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Author: ",
                undefined,
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn btn-danger"
              onClick={[Function]}
              type="button"
            >
              Delete
            </button>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Delete",
              "className": "btn btn-danger",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": "Delete",
            "type": "button",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="order-box row"
        >
          <div
            className="col-md-8 title"
          >
            <div>
              Book title: 
            </div>
            <div>
              Author: 
            </div>
          </div>
          <div>
            <button
              className="btn btn-danger"
              onClick={[Function]}
              type="button"
            >
              Delete
            </button>
          </div>
        </div>,
        "className": "order-item",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="col-md-8 title"
            >
              <div>
                Book title: 
              </div>
              <div>
                Author: 
              </div>
            </div>,
            <div>
              <button
                className="btn btn-danger"
                onClick={[Function]}
                type="button"
              >
                Delete
              </button>
            </div>,
          ],
          "className": "order-box row",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div>
                  Book title: 
                </div>,
                <div>
                  Author: 
                </div>,
              ],
              "className": "col-md-8 title",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Book title: ",
                    undefined,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Book title: ",
                  undefined,
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Author: ",
                    undefined,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Author: ",
                  undefined,
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <button
                className="btn btn-danger"
                onClick={[Function]}
                type="button"
              >
                Delete
              </button>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Delete",
                "className": "btn btn-danger",
                "onClick": [Function],
                "type": "button",
              },
              "ref": null,
              "rendered": "Delete",
              "type": "button",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
